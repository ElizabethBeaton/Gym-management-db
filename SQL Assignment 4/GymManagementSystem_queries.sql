-- SELECT * FROM GymManagementSystem.Members;

-- I WANTED TO CALCULATE THE NUMBER OF TIMES THE MEMBERS HAVE VISITED THE GYM IN THE PAST 2 WEEKS
-- HERE I SELECTED THE NAME OF THE INDIVIDUAL AND NAMED THIS COLUMN MEMBER_NAME,
-- AND I USED COUNT TO CALCULATE THE NUMBER OF TIMES THEY HAVE VISITED THE GYM IN THE PAST 2 WEEKS. ALSO RENAMED THE COLUMN

SELECT m.name AS Member_Name, COUNT(v.visit_id) AS Visit_Count
FROM Members m
LEFT JOIN Visits v ON m.member_id = v.member_id
GROUP BY m.name;

-- AS THE GYM IS GETTING OVERCROWDED, I WANT TO DELETE MEMBERS FROM MY DATABASE IF THEY HAVE 
-- BEEN TO THE GYM LESS THAT 2 TIMES IN THE PAST TWO WEEKS

SELECT m.name AS Member_Name, COUNT(v.visit_id) AS Visit_Count
FROM Members m
LEFT JOIN Visits v ON m.member_id = v.member_id
GROUP BY m.member_id
HAVING Visit_Count < 2;
-- MEMBER NAMED SARAH WILSON DID APPEAR IN THIS TABLE, HOWEVER AS I DELETED HER MEMBERSHIP IN MY NEXT QUERY, 
-- SHE NO LONGER IS SEEN IN THESE QUERIES


-- HERE I DELETE SARAH FROM MY MEMBERS TABLE AS SHE HAS BEEN TO THE GYM LESS THAN 2 TIMES
-- IN THE PAST 2 WEEKS AND I AM COUNTING THIS AS HER BEING INACTIVE NOT WORTHY OF HAVING A MEMBERSHIP IN MY GYM AS WE ARE ALREADY VERY CROWDED
-- FIRSTLY, I IDENTIFY AND DELETE THE VISITS ASSOCIATED WITH 'SARAH WILSON' FROM THE VISITS TABLE

DELETE FROM Visits
WHERE member_id = (
    SELECT member_id
    FROM Members
    WHERE name = 'Sarah Wilson'
);
-- select * from Visits;

-- AND THEN I DELETE 'SARAH WILSON' FROM THE MEMBERS TABLE. HER MEMBERSHIP IS REVOKED.

DELETE FROM Members
WHERE name = 'Sarah Wilson';

-- SELECT * FROM Members;

-- USE SUM TO CALCULATE HOW MUCH REVENUE THE GYM IS MAKING NOW WE HAVE DELETE SARAH'S MEMBERSHIP

SELECT SUM(mt.price) AS Total_Revenue
FROM Members m
JOIN MembershipTypes mt ON m.membership_type_id = mt.membership_type_id;

-- UPDATED THE BRONZE MEMBERSHIP COST BY Â£10 TO INCREASE THE OVERALL REVENUE

UPDATE MembershipTypes 
SET price = 50 
WHERE type_name = 'Bronze';
-- SELECT * FROM MembershipTypes;

-- CREATE QUERY THAT SEES WHO HAS BEEN TO THE GYM THE MOST IN THE PAST 2 WEEKS
-- DO THIS BY USING ORDER BY AND SEE WHO HAS GONE TO THE GYM THE MOST (CAROLINE)
SELECT m.name AS Member_Name, COUNT(v.visit_id) AS Visit_Count
FROM Members m
LEFT JOIN Visits v ON m.member_id = v.member_id
GROUP BY m.member_id
ORDER BY Visit_Count DESC
LIMIT 2; -- I LIMITED IT TO 2 PEOPLE SO I COULD AWARD TOP 2 MOST COMMITTED MEMBERS

-- BOTH EMILY AND CAROLINE HAVE BRONZE MEMBERSHIPS.
-- I WILL UPDATE THIS TO GOLD SO THEY GET THE EXTRA BENEFITS, BUT WILL NOT CHARGE THEM

UPDATE Members
SET membership_type_id = 3
WHERE name IN ('Caroline Bea','Emily Johnson');

 -- SELECT * FROM Members;

-- FOR READABILITY PURPOSES, I WILL MAKE ALL NAMES IN MEMBER TABLE UPPERCASE
UPDATE Members
SET name =  UPPER(name);

-- select * from Members;

-- AS THE GYM IS GETTING VERY BUSY, I WANT TO SEE WHAT DAY THE MOST PEOPLE WENT TO THE GYM ON
-- WITH THIS INFORMATION THE MANAGER CAN KNOW TO EXPECT FRIDAYS TO BE THE BUSIEST 
SELECT visit_date, DAYNAME(visit_date) AS day_of_week, COUNT(*) AS visit_count
FROM Visits
GROUP BY visit_date
ORDER BY visit_count DESC
LIMIT 1;










